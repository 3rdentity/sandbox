package org.elfwerks.sandbox.springjdbc;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Collection;

import javax.annotation.Resource;

import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.support.JdbcDaoSupport;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

@Resource
@Transactional(propagation = Propagation.REQUIRED)
public class JdbcNameValueTableDao extends JdbcDaoSupport implements NameValueTableDAO {
    
    private static final class NameValueMapper implements RowMapper<NameValuePair> {
        @Override
        public NameValuePair mapRow(ResultSet rs, int rowNum) throws SQLException {
            NameValuePair nv = new NameValuePair();
            nv.setId(rs.getInt("id"));
            nv.setName(rs.getString("name"));
            nv.setValue(rs.getString("value"));
            return nv;
        }
    }

    @Override
    @Transactional(propagation = Propagation.SUPPORTS)
    public Collection<NameValuePair> dump() {
        String sql = "SELECT id, name, value FROM nv ORDER BY id DESC";
        Collection<NameValuePair> result = getJdbcTemplate().query(sql, new NameValueMapper());
        return result;
    }

    @Override
    public void add(String name, String value) {
        String sql = "INSERT INTO nv (name, value) VALUES (?, ?)";
        getJdbcTemplate().update(sql, name, value);
    }

    @Override
    public void remove(String name) {
        String sql = "DELETE FROM nv WHERE name=?";
        getJdbcTemplate().update(sql, name);
    }

    @Override
    @Transactional(propagation = Propagation.SUPPORTS)
    public Collection<NameValuePair> lookup(String name) {
        String sql = "SELECT id, name, value FROM nv WHERE name=?";
        Object[] args = new Object[]{ name };
        Collection<NameValuePair> result = getJdbcTemplate().query(sql, args, new NameValueMapper());
        return result;
    }

    @Override
    @Transactional(propagation = Propagation.SUPPORTS)
    public NameValuePair byId(int id) {
        String sql = "SELECT id, name, value FROM nv WHERE id=?";
        Object[] args = new Object[]{ id };
        NameValuePair result = getJdbcTemplate().queryForObject(sql, args, new NameValueMapper());
        return result;
    }

    @Override
    @Transactional(propagation = Propagation.NOT_SUPPORTED)
    public void utilInitSchema() {
        getJdbcTemplate().execute(
                "CREATE TABLE nv(id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, "+
                               " name VARCHAR(256), "+
                               " value VARCHAR(256))");
    }
    
}
