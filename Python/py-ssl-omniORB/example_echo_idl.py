# Python stubs generated by omniidl from example_echo.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(2,0, __file__)


#
# Start of module "example"
#
__name__ = "example"
_0_example = omniORB.openModule("example", r"example_echo.idl")
_0_example__POA = omniORB.openModule("example__POA", r"example_echo.idl")


# interface EchoService
_0_example._d_EchoService = (omniORB.tcInternal.tv_objref, "IDL:example/EchoService:1.0", "EchoService")
omniORB.typeMapping["IDL:example/EchoService:1.0"] = _0_example._d_EchoService
_0_example.EchoService = omniORB.newEmptyClass()
class EchoService :
    _NP_RepositoryId = _0_example._d_EchoService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_example.EchoService = EchoService
_0_example._tc_EchoService = omniORB.tcInternal.createTypeCode(_0_example._d_EchoService)
omniORB.registerType(EchoService._NP_RepositoryId, _0_example._d_EchoService, _0_example._tc_EchoService)

# EchoService operations and attributes
EchoService._d_echoString = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), None)

# EchoService object reference
class _objref_EchoService (CORBA.Object):
    _NP_RepositoryId = EchoService._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def echoString(self, *args):
        return _omnipy.invoke(self, "echoString", _0_example.EchoService._d_echoString, args)

    __methods__ = ["echoString"] + CORBA.Object.__methods__

omniORB.registerObjref(EchoService._NP_RepositoryId, _objref_EchoService)
_0_example._objref_EchoService = _objref_EchoService
del EchoService, _objref_EchoService

# EchoService skeleton
__name__ = "example__POA"
class EchoService (PortableServer.Servant):
    _NP_RepositoryId = _0_example.EchoService._NP_RepositoryId


    _omni_op_d = {"echoString": _0_example.EchoService._d_echoString}

EchoService._omni_skeleton = EchoService
_0_example__POA.EchoService = EchoService
del EchoService
__name__ = "example"

#
# End of module "example"
#
__name__ = "example_echo_idl"

_exported_modules = ( "example", )

# The end.
